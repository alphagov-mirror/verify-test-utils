plugins { id "com.jfrog.bintray" version "1.8.4" }
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

def buildVersion = "2.0.0-${System.env.BUILD_NUMBER ?: 'SNAPSHOT'}"
group = "uk.gov.ida"
version = "$buildVersion"

repositories {
    maven { url 'https://gds.jfrog.io/artifactory/allowed-repos' }
}

ext {
    dropwizard_version = "1.3.17"
}

dependencies {
    implementation  'org.junit.jupiter:junit-jupiter-api:5.5.2',
                    'org.junit.jupiter:junit-jupiter-migrationsupport:5.5.2',
                    'com.google.guava:guava:28.1-jre',
                    'org.eclipse.jetty:jetty-server:9.0.7.v20131107',
                    'commons-lang:commons-lang:2.6',
                    'commons-io:commons-io:2.4',
                    "io.dropwizard:dropwizard-jackson:$dropwizard_version",
                    "io.dropwizard:dropwizard-client:$dropwizard_version"

    testImplementation  'org.assertj:assertj-core:3.14.0',
                        'org.mockito:mockito-core:3.2.0'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom)
            groupId = "uk.gov.ida"
            artifactId = "common-test-utils"
            version = "$version"

            from components.java

            artifact sourceJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }
    repositories {
        maven {
            url System.getenv("SONATYPE_ENDPOINT")
            credentials {
                username System.getenv("SONATYPE_USERNAME")
                password System.getenv("SONATYPE_PASSWORD")
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(
        System.getenv("MAVEN_CENTRAL_SIGNING_KEY"),
        System.getenv("MAVEN_CENTRAL_SIGNING_KEY_PASSWORD")
    )
    sign configurations.archives
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description 'Library for various SAML testing utility operations. These include'
            name 'SAML Test Utils'
            url 'https://github.com/alphagov/verify-test-utils'
            organization {
                name 'uk.gov.ida'
                url 'https://github.com/alphagov'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/alphagov/verify-test-utils/issues'
            }
            licenses {
                license {
                    name 'MIT Licence'
                    url 'https://github.com/alphagov/verify-test-utils/blob/master/LICENCE'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/alphagov/verify-test-utils'
                connection 'scm:git:git://github.com/alphagov/verify-test-utils.git'
                developerConnection 'scm:git:ssh://git@github.com:alphagov/verify-test-utils.git'
            }
            developers {
                developer {
                    name 'GDS Developers'
                }
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['mavenJava']
    publish = true
    pkg {
        repo = 'maven-test'
        name = 'ida-common-test-utils'
        userOrg = 'alphagov'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/alphagov/verify-test-utils.git'
        version {
            name = "$buildVersion"
        }
    }
}
task sonar(dependsOn: [':clean', ':build', 'sonarRunner'])

task buildJars(dependsOn: ['jar', 'sourceJar', 'javadocJar'])

defaultTasks 'jar'

